"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[876],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,g=u["".concat(l,".").concat(d)]||u[d]||c[d]||a;return n?r.createElement(g,i(i({ref:t},m),{},{components:n})):r.createElement(g,i({ref:t},m))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a=n.p+"assets/images/buttons-0ee41afcd3d38c7b2cfae09029816b22.png",i=n.p+"assets/images/edit-tabs-dcf6e6da36fca46c3942aa356b332d02.png",p=n.p+"assets/images/new-prompt-modal-693b05ad5634fb9c0a050c19d281586e.png",l={sidebar_position:4},s="Step 3: Prompt Engineering",m={unversionedId:"tutorial/prompt-engineering",id:"tutorial/prompt-engineering",title:"Step 3: Prompt Engineering",description:"Create a new prompt",source:"@site/docs/tutorial/prompt-engineering.mdx",sourceDirName:"tutorial",slug:"/tutorial/prompt-engineering",permalink:"/docs/tutorial/prompt-engineering",draft:!1,editUrl:"https://github.com/pezzolabs/pezzo/tree/main/docs/tutorial/prompt-engineering.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Step 2: OpenAI API Key (Optional) ",permalink:"/docs/tutorial/provide-openai-api-key"},next:{title:"Step 4: Consume Prompt",permalink:"/docs/tutorial/consume-prompt"}},u={},c=[{value:"Create a new prompt",id:"create-a-new-prompt",level:2},{value:"Prompt body",id:"prompt-body",level:2},{value:"Prompt settings",id:"prompt-settings",level:2},{value:"Testing (optional)",id:"testing-optional",level:2},{value:"To test your prompt:",id:"to-test-your-prompt",level:3},{value:"Commit and publish",id:"commit-and-publish",level:2}],d={toc:c},g="wrapper";function h(e){let{components:t,...l}=e;return(0,o.kt)(g,(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"step-3-prompt-engineering"},"Step 3: Prompt Engineering"),(0,o.kt)("h2",{id:"create-a-new-prompt"},"Create a new prompt"),(0,o.kt)("p",null,"In the Prompts page, click the ",(0,o.kt)("strong",{parentName:"p"},"+ New Prompt")," button to create a new prompt, choose OpenAI as the integration, and name it ",(0,o.kt)("inlineCode",{parentName:"p"},"GenerateTasks"),"."),(0,o.kt)("img",{src:p,style:{maxWidth:500}}),(0,o.kt)("h1",{id:"the-prompt-editor"},"The Prompt Editor"),(0,o.kt)("p",null,"It's time to engineer our prompt to produce the desired output. In our case, we want to generate a list of tasks to achieve a goal. We want the resposne to be in JSON, so we can process it in our example app."),(0,o.kt)("p",null,"Head over to the ",(0,o.kt)("strong",{parentName:"p"},"Edit")," tab to get started."),(0,o.kt)("img",{src:i,style:{maxWidth:600}}),(0,o.kt)("h2",{id:"prompt-body"},"Prompt body"),(0,o.kt)("p",null,"In the body of the prompt, copy and paste the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},'You are a talented task generator.\n\nYou\'ll help me generate tasks to achieve the following goal: "{goal}".\nYou must generate exactly {numTasks} tasks.\n\nYou must respond in valid JSON, strictly adhering to the following schema:\n\n{\n  tasks: string[];\n}\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can interpolate variables in the prompt body by wrapping them in ",(0,o.kt)("strong",{parentName:"p"},"single")," curly braces. For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"{goal}"),".")),(0,o.kt)("h2",{id:"prompt-settings"},"Prompt settings"),(0,o.kt)("p",null,"Feel free to modify the settings to your liking. For this tutorial, we strongly recommend:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Temperature"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Max Response Length"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"1000"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"When expecting a JSON response, it's best to set the temperature to 0. This minimizes the chance of the response being invalid.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Pezzo Editor",src:n(2187).Z,width:"1768",height:"1026"})),(0,o.kt)("h2",{id:"testing-optional"},"Testing (optional)"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This step is only possible if you added the OpenAI API key in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/tutorial/provide-openai-api-key"},"previous step"),".")),(0,o.kt)("p",null,"Pezzo allows you to test your prompts before publishing them. This is a great way to quickly iterate on your prompts and make sure they're working as expected."),(0,o.kt)("h3",{id:"to-test-your-prompt"},"To test your prompt:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Define test variables. You can find the ",(0,o.kt)("strong",{parentName:"li"},"Variables")," section at the bottom-right."),(0,o.kt)("li",{parentName:"ol"},"Click the ",(0,o.kt)("strong",{parentName:"li"},"Test")," button at the top-right corner.")),(0,o.kt)("p",null,"Now, you can see the full result of your test!"),(0,o.kt)("h2",{id:"commit-and-publish"},"Commit and publish"),(0,o.kt)("p",null,"Now you're ready to commit and publish our prompt."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Click the ",(0,o.kt)("strong",{parentName:"li"},"Commit")," button at the top-right corner and provide a useful message."),(0,o.kt)("li",{parentName:"ol"},"Click the ",(0,o.kt)("strong",{parentName:"li"},"Publish")," button at the top-right corner and select the ",(0,o.kt)("inlineCode",{parentName:"li"},"Development")," environment.")),(0,o.kt)("p",null,"Your prompt is now live! \ud83c\udf89 In the next section, you'll learn how to consume your prompt using the demo app."),(0,o.kt)("img",{src:a,style:{width:400}}))}h.isMDXComponent=!0},2187:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/editor-e5ce002504b8ba3523e34386f616fa41.png"}}]);